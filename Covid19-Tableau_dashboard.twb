<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <LayerControlWidget />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Covid-19Jan2020-July2020' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Filter by' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Deaths&quot;'>
        <calculation class='tableau' formula='&quot;Total Deaths&quot;' />
        <members>
          <member value='&quot;Total Deaths&quot;' />
          <member value='&quot;Total Cases&quot;' />
          <member value='&quot;Total Recovered&quot;' />
        </members>
      </column>
      <column caption='Parameter 2' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Death Count&quot;'>
        <calculation class='tableau' formula='&quot;Death Count&quot;' />
        <members>
          <member value='&quot;Death Count&quot;' />
          <member value='&quot;Cases Registered&quot;' />
          <member value='&quot;Recovered&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='covid_19_clean_complete' inline='true' name='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_clean_complete' name='textscan.19dy3g415q9d1h18kd79g16ls2tr'>
            <connection class='textscan' directory='C:/Users/abhin/OneDrive/Documents/Excel Files' filename='covid_19_clean_complete.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.19dy3g415q9d1h18kd79g16ls2tr' name='covid_19_clean_complete.csv' table='[covid_19_clean_complete#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Province/State' ordinal='0' />
              <column datatype='string' name='Country/Region' ordinal='1' />
              <column datatype='real' name='Lat' ordinal='2' />
              <column datatype='real' name='Long' ordinal='3' />
              <column datatype='date' name='Date' ordinal='4' />
              <column datatype='integer' name='Confirmed' ordinal='5' />
              <column datatype='integer' name='Deaths' ordinal='6' />
              <column datatype='integer' name='Recovered' ordinal='7' />
              <column datatype='integer' name='Active' ordinal='8' />
              <column datatype='string' name='WHO Region' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.19dy3g415q9d1h18kd79g16ls2tr' name='worldometer_data.csv' table='[worldometer_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Country/Region' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
              <column datatype='integer' name='Population' ordinal='2' />
              <column datatype='integer' name='TotalCases' ordinal='3' />
              <column datatype='integer' name='NewCases' ordinal='4' />
              <column datatype='integer' name='TotalDeaths' ordinal='5' />
              <column datatype='integer' name='NewDeaths' ordinal='6' />
              <column datatype='integer' name='TotalRecovered' ordinal='7' />
              <column datatype='integer' name='NewRecovered' ordinal='8' />
              <column datatype='integer' name='ActiveCases' ordinal='9' />
              <column datatype='integer' name='Serious,Critical' ordinal='10' />
              <column datatype='integer' name='Tot Cases/1M pop' ordinal='11' />
              <column datatype='real' name='Deaths/1M pop' ordinal='12' />
              <column datatype='integer' name='TotalTests' ordinal='13' />
              <column datatype='integer' name='Tests/1M pop' ordinal='14' />
              <column datatype='string' name='WHO Region' ordinal='15' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ActiveCases]' value='[worldometer_data.csv].[ActiveCases]' />
          <map key='[Active]' value='[covid_19_clean_complete.csv].[Active]' />
          <map key='[Confirmed]' value='[covid_19_clean_complete.csv].[Confirmed]' />
          <map key='[Continent]' value='[worldometer_data.csv].[Continent]' />
          <map key='[Country/Region (worldometer_data.csv)]' value='[worldometer_data.csv].[Country/Region]' />
          <map key='[Country/Region]' value='[covid_19_clean_complete.csv].[Country/Region]' />
          <map key='[Date]' value='[covid_19_clean_complete.csv].[Date]' />
          <map key='[Deaths/1M pop]' value='[worldometer_data.csv].[Deaths/1M pop]' />
          <map key='[Deaths]' value='[covid_19_clean_complete.csv].[Deaths]' />
          <map key='[Lat]' value='[covid_19_clean_complete.csv].[Lat]' />
          <map key='[Long]' value='[covid_19_clean_complete.csv].[Long]' />
          <map key='[NewCases]' value='[worldometer_data.csv].[NewCases]' />
          <map key='[NewDeaths]' value='[worldometer_data.csv].[NewDeaths]' />
          <map key='[NewRecovered]' value='[worldometer_data.csv].[NewRecovered]' />
          <map key='[Population]' value='[worldometer_data.csv].[Population]' />
          <map key='[Province/State]' value='[covid_19_clean_complete.csv].[Province/State]' />
          <map key='[Recovered]' value='[covid_19_clean_complete.csv].[Recovered]' />
          <map key='[Serious,Critical]' value='[worldometer_data.csv].[Serious,Critical]' />
          <map key='[Tests/1M pop]' value='[worldometer_data.csv].[Tests/1M pop]' />
          <map key='[Tot Cases/1M pop]' value='[worldometer_data.csv].[Tot Cases/1M pop]' />
          <map key='[TotalCases]' value='[worldometer_data.csv].[TotalCases]' />
          <map key='[TotalDeaths]' value='[worldometer_data.csv].[TotalDeaths]' />
          <map key='[TotalRecovered]' value='[worldometer_data.csv].[TotalRecovered]' />
          <map key='[TotalTests]' value='[worldometer_data.csv].[TotalTests]' />
          <map key='[WHO Region (worldometer_data.csv)]' value='[worldometer_data.csv].[WHO Region]' />
          <map key='[WHO Region]' value='[covid_19_clean_complete.csv].[WHO Region]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO Region]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>WHO Region</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region (worldometer_data.csv)]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO Region (worldometer_data.csv)]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>WHO Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column caption='Calculation2' datatype='integer' name='[Calculation_1644658302493937666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Death Count&quot; THEN [Deaths]&#13;&#10;WHEN &quot;Cases Registered&quot; THEN [Confirmed]&#13;&#10;WHEN &quot;Recovered&quot; THEN [Recovered]&#13;&#10;END' />
      </column>
      <column caption='Country/Region (worldometer data.csv)' datatype='string' name='[Country/Region (worldometer_data.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <column caption='WHO Region (worldometer data.csv)' datatype='string' name='[WHO Region (worldometer_data.csv)]' role='dimension' type='nominal' />
      <column caption='covid_19_clean_complete.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]' role='measure' type='quantitative' />
      <column caption='worldometer_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]' role='measure' type='quantitative' />
      <group caption='Action (Country/Region)' hidden='true' name='[Action (Country/Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/Region]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country/Region, Province/State'>
          <field>[Country/Region]</field>
          <field>[Province/State]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/abhin/AppData/Local/Temp/TableauTemp/#TableauTemp_0t4yuco0by88i616jen531a09jde.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/28/2025 05:37:22 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566' table='[Extract].[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]' type='table' />
            <relation name='worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89' table='[Extract].[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]' type='table' />
          </relation>
          <cols>
            <map key='[ActiveCases]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[ActiveCases]' />
            <map key='[Active]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Active]' />
            <map key='[Confirmed]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Confirmed]' />
            <map key='[Continent]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[Continent]' />
            <map key='[Country/Region (worldometer_data.csv)]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[Country/Region]' />
            <map key='[Country/Region]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Country/Region]' />
            <map key='[Date]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Date]' />
            <map key='[Deaths/1M pop]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[Deaths/1M pop]' />
            <map key='[Deaths]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Deaths]' />
            <map key='[Lat]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Lat]' />
            <map key='[Long]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Long]' />
            <map key='[NewCases]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[NewCases]' />
            <map key='[NewDeaths]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[NewDeaths]' />
            <map key='[NewRecovered]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[NewRecovered]' />
            <map key='[Population]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[Population]' />
            <map key='[Province/State]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Province/State]' />
            <map key='[Recovered]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[Recovered]' />
            <map key='[Serious,Critical]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[Serious,Critical]' />
            <map key='[Tests/1M pop]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[Tests/1M pop]' />
            <map key='[Tot Cases/1M pop]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[Tot Cases/1M pop]' />
            <map key='[TotalCases]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[TotalCases]' />
            <map key='[TotalDeaths]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[TotalDeaths]' />
            <map key='[TotalRecovered]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[TotalRecovered]' />
            <map key='[TotalTests]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[TotalTests]' />
            <map key='[WHO Region (worldometer_data.csv)]' value='[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89].[WHO Region]' />
            <map key='[WHO Region]' value='[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566].[WHO Region]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Province/State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province/State]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Province/State</remote-alias>
              <ordinal>0</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>1</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>281</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>2</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>389</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Long</remote-alias>
              <ordinal>3</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>389</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>4</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>216</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>5</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4810</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>6</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1746</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>7</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4068</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>8</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4017</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WHO Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WHO Region]</local-name>
              <parent-name>[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]</parent-name>
              <remote-alias>WHO Region</remote-alias>
              <ordinal>9</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region (worldometer_data.csv)]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>10</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>11</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>12</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalCases]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>TotalCases</remote-alias>
              <ordinal>13</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>207</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewCases]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>NewCases</remote-alias>
              <ordinal>14</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeaths]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>TotalDeaths</remote-alias>
              <ordinal>15</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>152</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewDeaths]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>NewDeaths</remote-alias>
              <ordinal>16</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalRecovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalRecovered]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>TotalRecovered</remote-alias>
              <ordinal>17</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewRecovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewRecovered]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>NewRecovered</remote-alias>
              <ordinal>18</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ActiveCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ActiveCases]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>ActiveCases</remote-alias>
              <ordinal>19</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Serious,Critical</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Serious,Critical]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>Serious,Critical</remote-alias>
              <ordinal>20</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tot Cases/1M pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tot Cases/1M pop]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>Tot Cases/1M pop</remote-alias>
              <ordinal>21</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths/1M pop</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Deaths/1M pop]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>Deaths/1M pop</remote-alias>
              <ordinal>22</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalTests]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>TotalTests</remote-alias>
              <ordinal>23</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tests/1M pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tests/1M pop]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>Tests/1M pop</remote-alias>
              <ordinal>24</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WHO Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WHO Region (worldometer_data.csv)]</local-name>
              <parent-name>[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]</parent-name>
              <remote-alias>WHO Region</remote-alias>
              <ordinal>25</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 2' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Death Count&quot;'>
          <calculation class='tableau' formula='&quot;Death Count&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='covid_19_clean_complete.csv' id='covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566'>
            <properties context=''>
              <relation connection='textscan.19dy3g415q9d1h18kd79g16ls2tr' name='covid_19_clean_complete.csv' table='[covid_19_clean_complete#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Province/State' ordinal='0' />
                  <column datatype='string' name='Country/Region' ordinal='1' />
                  <column datatype='real' name='Lat' ordinal='2' />
                  <column datatype='real' name='Long' ordinal='3' />
                  <column datatype='date' name='Date' ordinal='4' />
                  <column datatype='integer' name='Confirmed' ordinal='5' />
                  <column datatype='integer' name='Deaths' ordinal='6' />
                  <column datatype='integer' name='Recovered' ordinal='7' />
                  <column datatype='integer' name='Active' ordinal='8' />
                  <column datatype='string' name='WHO Region' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566' table='[Extract].[covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566]' type='table' />
            </properties>
          </object>
          <object caption='worldometer_data.csv' id='worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89'>
            <properties context=''>
              <relation connection='textscan.19dy3g415q9d1h18kd79g16ls2tr' name='worldometer_data.csv' table='[worldometer_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country/Region' ordinal='0' />
                  <column datatype='string' name='Continent' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='integer' name='TotalCases' ordinal='3' />
                  <column datatype='integer' name='NewCases' ordinal='4' />
                  <column datatype='integer' name='TotalDeaths' ordinal='5' />
                  <column datatype='integer' name='NewDeaths' ordinal='6' />
                  <column datatype='integer' name='TotalRecovered' ordinal='7' />
                  <column datatype='integer' name='NewRecovered' ordinal='8' />
                  <column datatype='integer' name='ActiveCases' ordinal='9' />
                  <column datatype='integer' name='Serious,Critical' ordinal='10' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='11' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='12' />
                  <column datatype='integer' name='TotalTests' ordinal='13' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='14' />
                  <column datatype='string' name='WHO Region' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89' table='[Extract].[worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country/Region]' />
              <expression op='[Country/Region (worldometer_data.csv)]' />
            </expression>
            <first-end-point object-id='covid_19_clean_complete.csv_E1E131DD0FF843FA98CC8E98BE51B566' />
            <second-end-point object-id='worldometer_data.csv_B784E8916A5444C0BF5596F527C8AA89' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
    <datasource caption='worldometer_data' inline='true' name='federated.1rmfv481nzbvcp12nxwx6187r4sd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_data' name='textscan.07ooq8d00al0lg152uze21cwf3a8'>
            <connection class='textscan' directory='C:/Users/abhin/OneDrive/Documents/Excel Files' filename='worldometer_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.07ooq8d00al0lg152uze21cwf3a8' name='worldometer_data.csv' table='[worldometer_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Country/Region' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
              <column datatype='integer' name='Population' ordinal='2' />
              <column datatype='integer' name='TotalCases' ordinal='3' />
              <column datatype='integer' name='NewCases' ordinal='4' />
              <column datatype='integer' name='TotalDeaths' ordinal='5' />
              <column datatype='integer' name='NewDeaths' ordinal='6' />
              <column datatype='integer' name='TotalRecovered' ordinal='7' />
              <column datatype='integer' name='NewRecovered' ordinal='8' />
              <column datatype='integer' name='ActiveCases' ordinal='9' />
              <column datatype='integer' name='Serious,Critical' ordinal='10' />
              <column datatype='integer' name='Tot Cases/1M pop' ordinal='11' />
              <column datatype='real' name='Deaths/1M pop' ordinal='12' />
              <column datatype='integer' name='TotalTests' ordinal='13' />
              <column datatype='integer' name='Tests/1M pop' ordinal='14' />
              <column datatype='string' name='WHO Region' ordinal='15' />
            </columns>
          </relation>
          <relation connection='textscan.07ooq8d00al0lg152uze21cwf3a8' name='covid_19_clean_complete.csv' table='[covid_19_clean_complete#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Province/State' ordinal='0' />
              <column datatype='string' name='Country/Region' ordinal='1' />
              <column datatype='real' name='Lat' ordinal='2' />
              <column datatype='real' name='Long' ordinal='3' />
              <column datatype='date' name='Date' ordinal='4' />
              <column datatype='integer' name='Confirmed' ordinal='5' />
              <column datatype='integer' name='Deaths' ordinal='6' />
              <column datatype='integer' name='Recovered' ordinal='7' />
              <column datatype='integer' name='Active' ordinal='8' />
              <column datatype='string' name='WHO Region' ordinal='9' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ActiveCases]' value='[worldometer_data.csv].[ActiveCases]' />
          <map key='[Active]' value='[covid_19_clean_complete.csv].[Active]' />
          <map key='[Confirmed]' value='[covid_19_clean_complete.csv].[Confirmed]' />
          <map key='[Continent]' value='[worldometer_data.csv].[Continent]' />
          <map key='[Country/Region (covid_19_clean_complete.csv)]' value='[covid_19_clean_complete.csv].[Country/Region]' />
          <map key='[Country/Region]' value='[worldometer_data.csv].[Country/Region]' />
          <map key='[Date]' value='[covid_19_clean_complete.csv].[Date]' />
          <map key='[Deaths/1M pop]' value='[worldometer_data.csv].[Deaths/1M pop]' />
          <map key='[Deaths]' value='[covid_19_clean_complete.csv].[Deaths]' />
          <map key='[Lat]' value='[covid_19_clean_complete.csv].[Lat]' />
          <map key='[Long]' value='[covid_19_clean_complete.csv].[Long]' />
          <map key='[NewCases]' value='[worldometer_data.csv].[NewCases]' />
          <map key='[NewDeaths]' value='[worldometer_data.csv].[NewDeaths]' />
          <map key='[NewRecovered]' value='[worldometer_data.csv].[NewRecovered]' />
          <map key='[Population]' value='[worldometer_data.csv].[Population]' />
          <map key='[Province/State]' value='[covid_19_clean_complete.csv].[Province/State]' />
          <map key='[Recovered]' value='[covid_19_clean_complete.csv].[Recovered]' />
          <map key='[Serious,Critical]' value='[worldometer_data.csv].[Serious,Critical]' />
          <map key='[Tests/1M pop]' value='[worldometer_data.csv].[Tests/1M pop]' />
          <map key='[Tot Cases/1M pop]' value='[worldometer_data.csv].[Tot Cases/1M pop]' />
          <map key='[TotalCases]' value='[worldometer_data.csv].[TotalCases]' />
          <map key='[TotalDeaths]' value='[worldometer_data.csv].[TotalDeaths]' />
          <map key='[TotalRecovered]' value='[worldometer_data.csv].[TotalRecovered]' />
          <map key='[TotalTests]' value='[worldometer_data.csv].[TotalTests]' />
          <map key='[WHO Region (covid_19_clean_complete.csv)]' value='[covid_19_clean_complete.csv].[WHO Region]' />
          <map key='[WHO Region]' value='[worldometer_data.csv].[WHO Region]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO Region]</local-name>
            <parent-name>[worldometer_data.csv]</parent-name>
            <remote-alias>WHO Region</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region (covid_19_clean_complete.csv)]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO Region (covid_19_clean_complete.csv)]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>WHO Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1644658302484516864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN  &quot;Total Deaths&quot; THEN [TotalDeaths]&#13;&#10;WHEN &quot;Total Cases&quot; THEN [TotalCases]&#13;&#10;WHEN &quot;Total Recovered&quot; THEN [TotalRecovered]&#13;&#10;END' />
      </column>
      <column caption='Calculation2(Color)' datatype='string' name='[Calculation_1644658302486614017]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Total Deaths&quot; THEN &quot;Red&quot;&#13;&#10;WHEN &quot;Total Cases&quot; THEN &quot;Blue&quot;&#13;&#10;WHEN &quot;Total Recovered&quot; THEN &quot;Green&quot;&#13;&#10;END' />
      </column>
      <column caption='Country/Region (covid 19 clean complete.csv)' datatype='string' name='[Country/Region (covid_19_clean_complete.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <column caption='WHO Region (covid 19 clean complete.csv)' datatype='string' name='[WHO Region (covid_19_clean_complete.csv)]' role='dimension' type='nominal' />
      <column caption='covid_19_clean_complete.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]' role='measure' type='quantitative' />
      <column caption='worldometer_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1644658302486614017]' derivation='None' name='[none:Calculation_1644658302486614017:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country/Region)' hidden='true' name='[Action (Country/Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/Region]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/abhin/AppData/Local/Temp/TableauTemp/#TableauTemp_0xmg3mp1nao4eo14ikmlq047qmat.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/26/2025 03:17:11 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F' table='[Extract].[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]' type='table' />
            <relation name='covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73' table='[Extract].[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]' type='table' />
          </relation>
          <cols>
            <map key='[ActiveCases]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[ActiveCases]' />
            <map key='[Active]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Active]' />
            <map key='[Confirmed]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Confirmed]' />
            <map key='[Continent]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[Continent]' />
            <map key='[Country/Region (covid_19_clean_complete.csv)]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Country/Region]' />
            <map key='[Country/Region]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[Country/Region]' />
            <map key='[Date]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Date]' />
            <map key='[Deaths/1M pop]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[Deaths/1M pop]' />
            <map key='[Deaths]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Deaths]' />
            <map key='[Lat]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Lat]' />
            <map key='[Long]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Long]' />
            <map key='[NewCases]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[NewCases]' />
            <map key='[NewDeaths]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[NewDeaths]' />
            <map key='[NewRecovered]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[NewRecovered]' />
            <map key='[Population]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[Population]' />
            <map key='[Province/State]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Province/State]' />
            <map key='[Recovered]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[Recovered]' />
            <map key='[Serious,Critical]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[Serious,Critical]' />
            <map key='[Tests/1M pop]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[Tests/1M pop]' />
            <map key='[Tot Cases/1M pop]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[Tot Cases/1M pop]' />
            <map key='[TotalCases]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[TotalCases]' />
            <map key='[TotalDeaths]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[TotalDeaths]' />
            <map key='[TotalRecovered]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[TotalRecovered]' />
            <map key='[TotalTests]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[TotalTests]' />
            <map key='[WHO Region (covid_19_clean_complete.csv)]' value='[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73].[WHO Region]' />
            <map key='[WHO Region]' value='[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F].[WHO Region]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>0</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>1</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>2</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalCases]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>TotalCases</remote-alias>
              <ordinal>3</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>207</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewCases]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>NewCases</remote-alias>
              <ordinal>4</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeaths]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>TotalDeaths</remote-alias>
              <ordinal>5</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>152</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewDeaths]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>NewDeaths</remote-alias>
              <ordinal>6</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalRecovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalRecovered]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>TotalRecovered</remote-alias>
              <ordinal>7</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewRecovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewRecovered]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>NewRecovered</remote-alias>
              <ordinal>8</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ActiveCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ActiveCases]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>ActiveCases</remote-alias>
              <ordinal>9</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Serious,Critical</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Serious,Critical]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>Serious,Critical</remote-alias>
              <ordinal>10</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tot Cases/1M pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tot Cases/1M pop]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>Tot Cases/1M pop</remote-alias>
              <ordinal>11</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths/1M pop</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Deaths/1M pop]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>Deaths/1M pop</remote-alias>
              <ordinal>12</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalTests]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>TotalTests</remote-alias>
              <ordinal>13</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tests/1M pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tests/1M pop]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>Tests/1M pop</remote-alias>
              <ordinal>14</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WHO Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WHO Region]</local-name>
              <parent-name>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</parent-name>
              <remote-alias>WHO Region</remote-alias>
              <ordinal>15</ordinal>
              <family>worldometer_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Province/State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province/State]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Province/State</remote-alias>
              <ordinal>16</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region (covid_19_clean_complete.csv)]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>17</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>281</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>18</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>389</approx-count>
              <contains-null>true</contains-null>
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Long</remote-alias>
              <ordinal>19</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>389</approx-count>
              <contains-null>true</contains-null>
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>20</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>216</approx-count>
              <contains-null>true</contains-null>
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>21</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4810</approx-count>
              <contains-null>true</contains-null>
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>22</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1746</approx-count>
              <contains-null>true</contains-null>
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>23</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4068</approx-count>
              <contains-null>true</contains-null>
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>24</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4017</approx-count>
              <contains-null>true</contains-null>
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WHO Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WHO Region (covid_19_clean_complete.csv)]</local-name>
              <parent-name>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</parent-name>
              <remote-alias>WHO Region</remote-alias>
              <ordinal>25</ordinal>
              <family>covid_19_clean_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1644658302486614017:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blue&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Filter by' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Deaths&quot;'>
          <calculation class='tableau' formula='&quot;Total Deaths&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='covid_19_clean_complete.csv' id='covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73'>
            <properties context=''>
              <relation connection='textscan.07ooq8d00al0lg152uze21cwf3a8' name='covid_19_clean_complete.csv' table='[covid_19_clean_complete#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Province/State' ordinal='0' />
                  <column datatype='string' name='Country/Region' ordinal='1' />
                  <column datatype='real' name='Lat' ordinal='2' />
                  <column datatype='real' name='Long' ordinal='3' />
                  <column datatype='date' name='Date' ordinal='4' />
                  <column datatype='integer' name='Confirmed' ordinal='5' />
                  <column datatype='integer' name='Deaths' ordinal='6' />
                  <column datatype='integer' name='Recovered' ordinal='7' />
                  <column datatype='integer' name='Active' ordinal='8' />
                  <column datatype='string' name='WHO Region' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73' table='[Extract].[covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73]' type='table' />
            </properties>
          </object>
          <object caption='worldometer_data.csv' id='worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F'>
            <properties context=''>
              <relation connection='textscan.07ooq8d00al0lg152uze21cwf3a8' name='worldometer_data.csv' table='[worldometer_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country/Region' ordinal='0' />
                  <column datatype='string' name='Continent' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='integer' name='TotalCases' ordinal='3' />
                  <column datatype='integer' name='NewCases' ordinal='4' />
                  <column datatype='integer' name='TotalDeaths' ordinal='5' />
                  <column datatype='integer' name='NewDeaths' ordinal='6' />
                  <column datatype='integer' name='TotalRecovered' ordinal='7' />
                  <column datatype='integer' name='NewRecovered' ordinal='8' />
                  <column datatype='integer' name='ActiveCases' ordinal='9' />
                  <column datatype='integer' name='Serious,Critical' ordinal='10' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='11' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='12' />
                  <column datatype='integer' name='TotalTests' ordinal='13' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='14' />
                  <column datatype='string' name='WHO Region' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F' table='[Extract].[worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country/Region]' />
              <expression op='[Country/Region (covid_19_clean_complete.csv)]' />
            </expression>
            <first-end-point object-id='worldometer_data.csv_96D020E9C574405687A5F9D41A226F3F' />
            <second-end-point object-id='covid_19_clean_complete.csv_2981057170104EFF9AC7899946503C73' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_80503920928444AFB355AAA4D8E41B61]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Country/Region' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bfederated.0e7lwxb03gtvwv0zn0u8m0dvr7pg%5D.%5BCountry%2FRegion%5D~s0=&lt;[federated.1rmfv481nzbvcp12nxwx6187r4sd].[Country/Region]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Country/Region' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_0DCC24078B084116AF9E850D92682731]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Countries' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='covid_19_clean_complete' name='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg' />
      <datasource caption='worldometer_data' name='federated.1rmfv481nzbvcp12nxwx6187r4sd' />
    </datasources>
    <datasource-dependencies datasource='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg'>
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1rmfv481nzbvcp12nxwx6187r4sd'>
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Cases Confirmed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases Confirmed(&lt;</run>
            <run>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Country/Region]</run>
            <run>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action1_80503920928444AFB355AAA4D8E41B61]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Confirmed:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eeeed6</color>
                <color>#ebebbc</color>
                <color>#e8e8a2</color>
                <color>#e5e589</color>
                <color>#e3e371</color>
                <color>#e0e059</color>
                <color>#dddd42</color>
                <color>#dada2b</color>
                <color>#d7d715</color>
                <color>#d5d500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Confirmed:qk]' />
              <size column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Confirmed:qk]' />
              <text column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Confirmed:qk]</rows>
        <cols>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{823A8CB7-55C4-4D38-8945-6026CCA8170D}' />
    </worksheet>
    <worksheet name='Country/Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Country/Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_data' name='federated.1rmfv481nzbvcp12nxwx6187r4sd' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter by' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Deaths&quot;'>
              <calculation class='tableau' formula='&quot;Total Deaths&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rmfv481nzbvcp12nxwx6187r4sd'>
            <column caption='Calculation1' datatype='integer' name='[Calculation_1644658302484516864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN  &quot;Total Deaths&quot; THEN [TotalDeaths]&#13;&#10;WHEN &quot;Total Cases&quot; THEN [TotalCases]&#13;&#10;WHEN &quot;Total Recovered&quot; THEN [TotalRecovered]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1644658302484516864]' derivation='Sum' name='[sum:Calculation_1644658302484516864:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action2_0DCC24078B084116AF9E850D92682731]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]</column>
            <column>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[Action (Country/Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[Longitude (generated)]' field-type='quantitative' max='27219265.054917362' min='-25246222.187817354' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[Latitude (generated)]' field-type='quantitative' max='15842468.514191639' min='-11501308.263008807' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]' />
              <tooltip column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Population:qk]' />
              <text column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]' />
              <lod column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]' />
              <geometry column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Country/Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>&lt;[Parameters].[Parameter 1]&gt;:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Population:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[Latitude (generated)]</rows>
        <cols>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FEDF9771-AD11-4FE0-B199-F2D2F10128DE}' />
    </worksheet>
    <worksheet name='Death Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Count(&lt;</run>
            <run>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Country/Region]</run>
            <run>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action1_80503920928444AFB355AAA4D8E41B61]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Deaths:qk]' />
              <size column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Deaths:qk]' />
              <text column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Deaths:qk]</rows>
        <cols>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{46EF80BA-AA87-40B8-BF1F-CC88B1782C64}' />
    </worksheet>
    <worksheet name='Recovered'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recovered(&lt;</run>
            <run>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Country/Region]</run>
            <run>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action1_80503920928444AFB355AAA4D8E41B61]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Recovered:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dbebe1</color>
                <color>#c6e5d1</color>
                <color>#b3dfc2</color>
                <color>#a0d9b4</color>
                <color>#8dd3a6</color>
                <color>#7ccd98</color>
                <color>#6bc78b</color>
                <color>#5bc17f</color>
                <color>#4cbb73</color>
                <color>#3eb668</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Recovered:qk]' />
              <size column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Recovered:qk]' />
              <text column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Recovered:qk]</rows>
        <cols>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{4AAEAB7B-D626-4B91-9349-88DC66EA602E}' />
    </worksheet>
    <worksheet name='Timeline with Filters'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt; Over Time&#10;&lt;</run>
            <run>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Country/Region]</run>
            <run>&gt;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 2' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Death Count&quot;'>
              <calculation class='tableau' formula='&quot;Death Count&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg'>
            <column caption='Calculation2' datatype='integer' name='[Calculation_1644658302493937666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Death Count&quot; THEN [Deaths]&#13;&#10;WHEN &quot;Cases Registered&quot; THEN [Confirmed]&#13;&#10;WHEN &quot;Recovered&quot; THEN [Recovered]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1644658302493937666]' derivation='Sum' name='[sum:Calculation_1644658302493937666:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Calculation_1644658302493937666:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Calculation_1644658302493937666:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Calculation_1644658302493937666:qk]' />
              <size column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Calculation_1644658302493937666:qk]' />
              <text column='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Calculation_1644658302493937666:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Calculation_1644658302493937666:qk]</rows>
        <cols>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{5B11EA64-A4A1-4615-AE6B-5E2132186511}' />
    </worksheet>
    <worksheet name='Top 5 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 countries(&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;)&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_data' name='federated.1rmfv481nzbvcp12nxwx6187r4sd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter by' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Deaths&quot;'>
              <calculation class='tableau' formula='&quot;Total Deaths&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rmfv481nzbvcp12nxwx6187r4sd'>
            <column caption='Calculation1' datatype='integer' name='[Calculation_1644658302484516864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN  &quot;Total Deaths&quot; THEN [TotalDeaths]&#13;&#10;WHEN &quot;Total Cases&quot; THEN [TotalCases]&#13;&#10;WHEN &quot;Total Recovered&quot; THEN [TotalRecovered]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1644658302484516864]' derivation='Sum' name='[sum:Calculation_1644658302484516864:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1644658302484516864])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]' direction='DESC' using='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]' />
          <slices>
            <column>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]' value='23' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]' />
              <text column='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Country/Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>&lt;[Parameters].[Parameter 1]&gt;:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]</rows>
        <cols>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]</cols>
      </table>
      <simple-id uuid='{6B23E103-B035-4D23-A6EC-0B99918E61EE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Filter by' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Deaths&quot;'>
          <calculation class='tableau' formula='&quot;Total Deaths&quot;' />
          <members>
            <member value='&quot;Total Deaths&quot;' />
            <member value='&quot;Total Cases&quot;' />
            <member value='&quot;Total Recovered&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89256' id='35' param='horz' type-v2='layout-flow' w='97826' x='1087' y='8789'>
            <zone h='89256' id='5' type-v2='layout-basic' w='97826' x='1087' y='8789'>
              <zone h='44596' id='3' name='Country/Region' show-title='false' w='51193' x='1087' y='8789'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='44660' id='24' name='Death Count' w='30979' x='1087' y='53385'>
                <zone-style>
                  <format attr='border-color' value='#d4d4d4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                </zone-style>
              </zone>
              <zone h='44660' id='29' name='Cases Confirmed' w='33444' x='32066' y='53385'>
                <zone-style>
                  <format attr='border-color' value='#d4d4d4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
              <zone h='44660' id='32' name='Recovered' w='33403' x='65510' y='53385'>
                <zone-style>
                  <format attr='border-color' value='#e6e6e6' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='44596' id='33' name='Top 5 Countries' w='36357' x='52280' y='8789'>
                <zone-style>
                  <format attr='border-color' value='#d4d4d4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='44596' id='9' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10276' x='88637' y='8789'>
                <zone-style>
                  <format attr='border-color' value='#e6e6e6' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='6834' id='37' type-v2='text' w='97826' x='1087' y='1955'>
            <formatted-text>
              <run fontalignment='1' fontsize='22'>Covid - 19(Jan 2020 - July 2020)</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#b4b4b4' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='0' />
              <format attr='padding' value='10' />
              <format attr='background-color' value='#f2f9f9' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='padding' value='10' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{942BB314-9C43-4E63-890B-695D5A6B47ED}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Country/Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[yr:Date:ok]</field>
            <field>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[mn:Date:ok]</field>
            <field>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]</field>
            <field>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[sum:Calculation_1644658302484516864:qk]</field>
            <field>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
        <map-navigation value='1' />
        <layer-control toolbar-button-enabled='false' />
      </viewpoint>
      <simple-id uuid='{7F551BF1-0B5A-44A5-BF8B-3AD8ADBBCB4C}' />
    </window>
    <window class='worksheet' name='Timeline with Filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 2]' show-title='false' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[mn:Date:ok]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD24977D-8E8F-4034-8C49-C22E68F54C3B}' />
    </window>
    <window class='worksheet' name='Top 5 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C31D8CB-AFEC-492A-A764-7A0E5AF9E382}' />
    </window>
    <window class='worksheet' name='Death Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[mn:Date:ok]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[none:Country/Region (worldometer_data.csv):nk]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[yr:Date:ok]</field>
            <field>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F620D8E-C68B-4D59-BCB1-E7F264BA52B0}' />
    </window>
    <window class='worksheet' name='Cases Confirmed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[mn:Date:ok]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[none:Country/Region (worldometer_data.csv):nk]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Confirmed:qk]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[yr:Date:ok]</field>
            <field>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF1FF1BB-EBF2-4DF0-ABFB-42301E1F18C6}' />
    </window>
    <window class='worksheet' name='Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[Action (Country/Region)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[mn:Date:ok]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[none:Country/Region (worldometer_data.csv):nk]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[sum:Recovered:qk]</field>
            <field>[federated.0e7lwxb03gtvwv0zn0u8m0dvr7pg].[yr:Date:ok]</field>
            <field>[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4118C5A-CB26-45C6-8A93-73481A6D2EC4}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cases Confirmed'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country/Region'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
          <layer-control toolbar-button-enabled='false' />
        </viewpoint>
        <viewpoint name='Death Count'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recovered'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Countries'>
          <highlight field='[federated.1rmfv481nzbvcp12nxwx6187r4sd].[none:Country/Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FA480CEE-F3D0-4DBE-935F-8356F1B01C41}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases Confirmed' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country/Region' width='192'>
      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
      CoqC0WIml0wxPzrBzNg4ga52fn7tEuXKwX37tWS1R1lMomna5171AcjncuhNJoJO111R9jtx
      yADsiH6r+kkBSLvLR1EH3M5arPXtCfd04Qz4ScXjaJpGolxEEATeOnMWV0kmsx2nkslSlWXU
      ZKZOoDrTjp+/UK1gtFnRVBWTxUL362dRjAZEnQ5nJMQ777+/b1e2++FREmutYP3z7PnJ5XLc
      im+hM+gfaB+VyuXPJwMsraxRKDy6TsXBQIBX+ocobMYQExlaQmE6nT5mL1whtry651hRpyN0
      rH/Hny9VURQFQRA43t2LtVDhjWMn2a6W0Lc2sB2P7+jpxQr5ZBpfVztmgxEEAaPFjDsUZOD1
      l7F73ORTaa5cu8b/8/ffY2Fl+UDPrdPpsFqtjyxYVWuN/rSyUDVN+8xGvdVqRYyn2JqdoyBo
      FG6Xmd4JRVG4MD6K7s///M//1eel7/vGZpSL12/xlz/4mI8+PkehWKZSLhEJ3dvIOSj0ej0B
      m4Oj7Z1YrVay+TxqyIfD66GQzuzp3ibeNj6VSoWA2YrVakWWZfq6ukmlUqSNAiabFTWVIxIK
      EYtukc1mMXvdWL37pxfYPW7Cne2kojFmp6awW6z7NnLajVrCmtForPfX+SywWCxUq9V6+eKT
      giRJjI6N8pOf/Yybt25y6fpVdKJIMBB8aGkkiiItjY1MTExg8vlYXV6iq7nlruusrq4ylYp/
      PhhAVVVGbo3zl//xJ/xqMklZEcmpZsZWUoxNzbO+usTl0XlMooxO3Em3rRVd3O+ahUKBX/7q
      fTrbO6hUKjidzvo5Xo+H+OwCiYUlPHoTy2OTWEP+ejsTAL3VwsTsLJQrZNMZ/H4/pVKJ1WwK
      o9nM2uoqjR4fIX+AhfVVCtkcFreT0u1en6qisHJzDIffh6jTYTAZMdttJLZiZASVSipNY0Pj
      vs8PnxSVF4vFz2wI6/V6DAYDZrO5Pj/4caNYLLK6usrIyAjvvPce3pZGBJMBT1OEog5W5hfp
      anv4QKHZbOZ431EcsoJZECmUy5Sr1XpwE3aab82srnw+IsG/vnCVv/jRVVR2dt57Eramokeh
      0WMmXyrz3//ua/R2tmKz2RBFsd7fPhqLcf7WCEqhhKOjhePBBt57/32+9OUvUyqX6evqRhRF
      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
      /x/kX09CiGrjCAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      LcXTI/5/iDNNuEX+ZdYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Death Count' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3deXRc1Z3g8e99rzapVKVdlmRZsjZbNpZkvGNwIGBDwhYChAlN6EOaDj3T
      Sc6cpDs9PSfdfXrmTPfp09Od6UkP3UAOpIcDhGQgwTJL2Aw23m0ZWZIt25KsfbX2pdb33p0/
      SlYMjS3ZKqm03M8/tkqlej+V3q/evffd371CSilRlCVICCG0WAehKLGkEkBZ0lQCKEuaSgBl
      SVMJsCD08Vc//At+/doveOU3HxA2fzduIS0/H+w9EMPYFjZbrANQpid5eTFff+ibVLz4DPVd
      6+k6tY/xkMnaNXn85jdv4ExMJjHYxbnOAZwp+dx/++ZYh7wgqCvAAiIExDudBA0/oZDEp9tw
      ZJZQWFTCjrKVvPfhJ2i6jY7WlliHumCoK8ACEfKP0d58nsYRKNWHODqos3lzFuBAN8foGQmQ
      npJEwdobKXPosQ53wRDqRthCEOJ0ZTU+bKxZV4rbLqk/U4uems3y9HSGOxsZMFwULnNTU9dA
      ctZKCpanxzroeU8IIWKaAFJKhBCxOryyxMX8TrBpmrE8vKKoTrCytKkEUJY0NQqkxFRLSwse
      j4eUlBQAQqEQH3zwAX6/n+3bt3Py5En8fj+JiYns3LkTIQTBYJCPPvqI0tJSsrOzqaysJBAI
      sH37djQt8pk+PDzMxx9/zKZNm8jOzubo0aMEAgFKS0vZt28flmUB6gqgxFBzczO/+tWvaGho
      mHzs4sWLAOzcuZO0tDR27NjBjh076OjoACIDJxUVFeTn57Nnzx4+/fRTBgcHCQQCHD58GIBw
      OMzrr7/Otm3bsNlsHDx4ECklhYWFeDwe7rjjDsrKygCVAEoMrVy5krvuuuszI4FSShobG3nx
      xRcZGBjA6/XS2trKpk2bEEJwadCyqKiInJwchoaGSEhIYM2aNZOJ1NfXR1NTE7t376a6upoT
      J05w7tw5KioqCIfDeL1eTp48CagEUOaZ7Oxsvve973Hfffdx8uRJTNOkrq6OtWvXTj7HMAws
      y8Lv97N161Z8Ph979+4lISEBALvdTllZGU899RSdnZ14PB4effRRbr31Vs6ePUtvb+/kc6PS
      B7BMA8MSOOw60jLx+/1odicOXRAKW7hcDqS08AeCxLlcauxfAaCmpoY9e/ZgGAZpaWkMDAyQ
      lJTE+++/j9/v5+tf/zpnzpyhvLwcTdPo6enB7/dTUFDAs88+S2JiIqFQiLa2NsbGxrj77rup
      rKyktLSUcDjMM888Q15eHqtXr+bpp5/G6XTy+OOPc+TIEbZu3QpE4U6wERjh0+OHGHUVc/um
      AhrPnGQgqJGUsoxUl4/3DzXzyIM78Q928Is3D/KtRx/GaYtceAzDwGZT/XAFBgcH6ezs5IYb
      brjic06dOkV+fj5er/cLvx8Oh6msrGTr1q3T+pAVQogZn326w82NG8o5di6AlBZNre14ktKR
      aKDZKEiy0T5qEG7vJrcgB2CyBy6lnPy/srQlJiaSmJh41fOhtLQU4IrP0XWdLVu2IKVkup/r
      M04AoenY9N9lm+5KYOOWrZw8cQzvikzSCwrovXAeYdpJcYQmn3cpSJUASizNOAFCvhHaW9u5
      2BOgbySdZJeds/UNhC07uiYQdg/01+Ao3kaw+zzA5FitlFI1gZSokVJijvvRHHY0h31aPzPz
      PkBwnN7+YQDivcl4XTp9/QO4E1Nx2SSm1LFCfjRXPGYogNMVhzbRPlN9ACVazECQM3/zHJ1v
      7sOemEDJj75N9j23XvVnYj4bVCWAEi3nf/oyp//7v8LE6WxLiOe2D57HU5x7xZ+J+WxQRYkG
      aZr0fnxs8uQHMMZ8DJ48M+XPqgRQFjx/10VG6i585jFht5FQmDPlz6r2h7KgScui7m+eI9Q7
      MPmY5nRQ+NTDJG+88j2FS1QCKAvawPEaut7ahxCABASs+fMnKfrjR6d1M0wlgLJgWaZJ7Y//
      N5Y/AERWzUgqL6HwOw+j2aa3MIBKAGVBklLS9spbjJw6B0ROfj3Oydq//mP0ONe0X0clgLIg
      BXsHqP/J/wXgUkMn+/7bSbv5xmt6HTUKpCw40rJo/OeXCHT0cKmZ71yWSsl//Q5Cu7ZTWiWA
      suCM1NbT/urbE5/8AiEEhd99FFd2xjW/lkoAZUExgyHO/e1zGKPjICLNn6Qb17DyDx66rjqT
      GSeAZQSpPvIBB0+1AJLao/vYd+AA1WebGbrYxJ7fHkQCwbE+Xv1/bxAy1OxP5fr1vL2P/n3H
      EUROfs1lZ81f/id0p+O6Xm/GCSAtk4LVqxGmBVJycXAEjyeRvNxsLCnwyAADQUlfexsJaWmo
      dRiV6xUeHqXxJ/8Gl02hX/HNe0i5qfy6XzMKBTHxJFgjgAEItt+2k1DQx4ljR1lXsoK84lxa
      GlogCJkJkbFZwzCAyMpwqh5Ama4LT7/MeH1LpOkjwZGeTP4Pfp+wacJ1rjI44wSQUoKcKHBB
      0t3dTVZWBmLis15zpWF1HMa+/EbkYHPkoJfNAFWzQZXp8Ld20f7zXwMTw56aoOiHTxCfmT6j
      GvMZn32BoR5OnmkEoLHDS4pL4+SnZyjbtBW3HibOcpCwuhxHchrBJB2bpgrilWtjhQ3O/+0z
      mGM+hIhM+kzevI6cR++d8QILqh5Amff69x3n5OM/wgpHms6aw87GX/4vUratn9HrRqUoXlFm
      kzHuo+HvnkUaxuQd35zH7iN5S1lUXl/dB1DmLSklHS9VMFp9NnLyC3BlpVHwgyeu+Y7vlagE
      UOat0MUBWp/9BZfGzjVNUPinT+JMT4naMVQCKPOStCwu/MMLBHv6f3fHd2s5mV/fFdXjqD6A
      Mi8Nn6il5zfvIYhUuging+K/uLapztOhrgDKvCNNk8b/8S9Y/sDkhLflv3cf3vVron4sdQVQ
      5hUpJT2/fo+Rk6cjDwiIz8tm5X/+/VlZVFklgDKvhPuHaPnpi8ClO74aed/9Fs6M1Fk5nmoC
      KfOGtCzannkFf3P7ZKFLyo6NZD5016wdMyoJIC0L87JJbZZpYloWUloYRmSSkpQSwzCmvWqv
      svSMnW6g+xd7Jm942dxx5P/Jk2jXOdV5OmacAEZwlMqD77LvRFPkAWlw7ON3OHKqkcGeC7xe
      8RESCAx38W8vv0bIVAmg/HvSNGn5yfOYlxW6ZH/rfrwbpl7bZyZm3AfQbHGU31jO8fNBkJKu
      pvMk5q7C7wc0G3mJOl3jJqH2bnILI+s0XloaXS2Prlwy8P4BBj86AkROfmdeNsv/8D/M+vkx
      8wTQbWgTO75IY4zDx0+TuTyNzt4wy9KLySwooKuhHmHqpDojFze1QYZyOWNkjJZ/fB4si0vr
      W+X94NvY0pPnfwKEA+P0dvUyOBBgKJDB3fffS3C8D901iksTGA4vsr8WR9FWQj31QGQnD1D7
      A8RKQ0MDL7zwAt///vfJysoCoLq6mqNHjzI0NMTjjz/Oe++9h8/nIycnh3vvvRcpJW+88Qad
      nZ3k5+ezYsUK9u/fTygU4sknn8Tr9eL3+3nuuecAeOCBBzh+/Di9vb3k5uayYcMG3nzzTXw+
      H7t27frMVkjdv3oL//kmLp39yV/azLKv7UJMc3GrmZj52SdNQnhYW+jBNMHlicPhyGRdfDpO
      uyBB6qR5bkGPT8BMKcWuq3qAWEtNTeWWW275zKdraWkpRUVFvPbaa2iaxmOPPUZDQwM1NTVA
      ZP+tQCDAd7/7XV5++WX6+/t56qmnqKuro7a2lu3bt9PQ0MCOHTvIy8vj8OHDtLa24vV6Wbdu
      HVlZWXz729/mo48+IhgMTh432NVLx7++DEzU+LrjWPlnT83JyQ9RSAB7nJf8/M9uWqbpdtzx
      9skDOB2JkW9MbE2pxFZycvK/u6lkmia7d+8mHA6j6zq1tbVUVlaSn58PRK7WTqcTAKfTyQ03
      3MDPfvYzgsEgN94YWYwqGAzi9Xqx2yN/+x/+8IeEw2GeffZZnnjiCQ4dOkRrayt5eXkAWIZB
      698/hzE8Orm2Z/YTD+EpK5mjd0LdB1hypJQMDw8zPDxMf38/4XAYv99PY2MjO3bsICMjg7Nn
      z6JpGrt27aKuro5AIICmaQwMDFBfX8/o6ChpaWncd999ZGRksHbtWnw+H3l5eRw5coTKykrS
      09M5cOAA3d3dCCHo7e0lPz+f8vJy6usjTeGRI1X0vbl3ctjTlZtF9h8+Mqfvh0qAJaixsRG3
      201raytVVVVUV1eTmppKTU0NWVlZbNu2DZ/PR21tLY899hgVFRX4/X4efvhhmpqaeOSRR4iL
      i+P06dPcfPPNeDwedu/eTWpqKlu2bCEuLo7NmzdTWFhIbW0tDz30EJmZmbS2tuLz+bjzzjux
      AkHa/+kFmFggQWg6eX/2RzhSk+f0vVAlkUvcpSaPdoUCEykl4XAYh+PKN6Msy8KyrGn/LaWU
      9Lz0Bs1//U9IK3L6JX1pCyUv/D1Cn7vPZFUSqUy2169ECHHVkx8iu35eKYG+iDk8SufTL4Il
      EYDucZP75/9xTk/+S1QTSJlT0rJo+5/PEu7tn3ws84mHiS8pjEk86gqgzBkrFKbzpz+n//Xf
      Ttb4OldkkfWdb87KVOfpUAmgzJmhDw7Q9czLICVCgLDprPjT72DzuGMWk2oCKXPGX9/0ma1M
      bZ4EPFtntrbPTKkEUOaMDIU/87V7/VrsKUkxiiZCJYAyJ4yRMYbe/2RyP6P40tUU/MOPETEe
      Bp/5/gBmiNpjezlS04aUkrqqo3zyyScc/bSOob4W3vngCBIIjQ/w2q/3qP0BlqixE9UEJyq9
      hCbI+OZ92JK8U//gLItCAoTJLSzCChsIIVizfitbN5VjBUYIGxJnaJzBkKSvvRVHUpLaH2CJ
      Gqh4D5AIBPaURJJ23hLrkIAojALZHG687lHAD8Bofyef1pzFlZKDJmBl0XJaGtvBJ8nyRA6n
      9gdYWsJdvYweOhH5QkDirh1IbwKhUCi2gRHlYVApJUHp4JYdX+LgwQOE0/LQ45dhXjiCLasc
      baglclC1P8CSMrz/KOalGZ+6Tuq9d0x5d3muzPjs8w92UXm6AcuCxo4EnIFejpyvZ+Xq9SR5
      NMKWk/jCtThS0gl6hdofYImRhsHAnvcnK73cpatxbyiNdViTZpwAcclZ3HJL1mWPpLOi6Hdf
      uQBPQt7Eky9/nrIUBBqa8Z+p/936nnfeiua4+vyjuaTaH8qs6n/tLTBNhBBo7jjSHrk31iF9
      hroPoMwaY3iU0U+OTn7tvW07mjt20x6+iLoCKLNm7Egloc7uSOfXZiP14XsQ86wPqK4AyqwZ
      rHg3sqevAFdRHu71s7vI1fVQVwBlVoR7+hg/9ulkvW/K/XehuZwxjemLqARQZsVgxbtY/iAI
      geaOJ3HXl2Id0hdSCaBEnRUMMfLRgckVnhO/vB17VkZsg7oC1QdQoi5wtp7A2cjSJ2gaSffs
      jNqujtGmrgBK1A3+5m0wTIQAx8ocErZvjnVIV6QSQIkqc2SUsYPHJuf9J951W0xWe5iuGUcm
      LZOOxlrONPVGlkdvOc+hgwc509jB2FAXRyvrADCCY3y8/wBhtT/Aoja6/zBG/+DkcifJ98/e
      7i7RMOMEMEPjGNJiYGAcAJcnja3btjLa24wvEGSgowOfJRnubqFvLISldohZtKRpMfz2BwjL
      AiFwbyzHnp0Z67Cuaub1AC4veTkZdIz4QQiSvG5OnzpJUnYRNs1PUUEqDc0DyMEAK9LjAFUP
      sFgZvX34Kk9NTnzzfO0rhCf+1vNV1OsBzlRXkZZ/A8uSExjsbcaRlMtw6yn0pAJs412Rg6p6
      gEVp+K33IRwpfLdnLyPx5q1o82Te/5VEpx6gpo4Rn0Vju5vh4QEGT1fR5k1jdW4qbpsLmZiC
      M2cZgb4wWowWQFJmlxUIMrr3EwCEgMSv7kTMo2nPV6IWx1WiYvz4p7R977+AYSDiXKx88V9w
      FqyMdVhXJYQQ83d8SllQRt7+AMzIlrjx60tx5K2IcUTToz5+lRkzR0cZ+/iTifU+BYn33YXQ
      52aLo5lSCaDM2PgnR5DjPhBgz8nGfdP8vfP7eaoJpMyIDBsMV7xNZM0fSNhxE7rXE+uwpk0l
      gDIj4c5OgqfPAiCcdhK/9tUYR3RtVAIoMzL63kfIUAghwFWyCmdhfqxDuiaqD6BcNysQYPSd
      DxBCIBEkPfJArEO6ZuoKoFy3QG0d5sVeAGzpqcRtujHGEV07lQDKdZFSMlrxFhgmCEi440vY
      UuZ2i9NoUAmgXBdraBjfociaP0ITeO++M8YRXZ+oJEBwtI+OiyORL6RJS1MLJhAcH+B8YwcA
      lhGi9vQZTEtNh14Mxg8dRfr8ICCuvBTHAuv8XjLjBAj7h6g9XU1jSx9ISdO501TXnscAxsdH
      OFtbR1jC6MUWas63YqgEWPBkKMxYxVsgBEIIEr66c8Hc+f28GY8C2eOS2Lh+LYfOROoB8kvK
      GBg4PPn9wiw3jd0+zK4RVixPBFQ9wEJnNDYRariAALS0FOxbNs2Ltf6vx6wPgyZkFXKxrQrd
      lUacGdkcWdUDLGzj+w8ig0EQEL9tC3HL5ueSJ9MRnXqA6mo6+gwaMhII9zXS1NbG2HE361am
      YHe4cBlB4rKy8HePo6oBFjYrGGTsnXcn1/v03PuVWIc0I6oeQLkm/mMn6P3Rj5GWhWPNajL/
      +R/RnPNvycPpUPUAyjWRpsnoG3tAWghNkHDnHQv25L9EJYAybWb/AMFT1ZH1PuPjce+8PdYh
      zZhKAGXa/EeOIscj/bi4m7agJyXGOqQZUwmgTIsMhxl/820AhE0n4Wvza6uj66USQJmWUEMj
      RksLQoA9bwWO4qKpf2gBUAmgTElKiX/vx8hQZM0f9713o8XHxziq6FBjkMqUpD+Ab+9ehBAI
      p5O47TfFOqSoUVcAZUrBqirk0HBk4tst29Ez0mMdUtSoK4ByVdI08b39TmS9T10n7o4vz9vN
      Lq6HSgDlqszubkK1tQjAlrMc14aFV/V1NVFJZTPkZ8wXBMAIBejp7iFkWJjhAINDY0BkH4G+
      /n61PPoCEzx6DDk+Htnq9LZbEfN8sdtrFZV6gMoj+zl+uh0pJTWfHmdgsI/KqjqGBjp4/6Mj
      SAm+oU7efPdjtUHGAiINg/G33kYI0OLjid+1M9YhRV1U6gG2bCmP1ANIC9MWx5o1azl18jiG
      5aY41UHzcBijrYe8/GwALMtCSollWZO1Acr8Y5w9h9XVCQjs68shJWXR/b2i3geQUiIlXGrp
      JOcV0t90BoELry08+TwxUU2kLaIO1aIiJcF9+8A0EZog/it3oS3Cmbsz/o0Co32cPXuW1rYQ
      K5Yn4ZRBjp84hrQlYtchYIuHwXacq28i0HkOYPKktyxLJcA8ZQ4OEvxkPwjQUlNxbdq0qEZ/
      LplxAjjiEilas4miNWBzuFietg1/IIgrLh6BRaIULM/YhdDtyIxN6LoqiVkIwtWnkENDCCD+
      q19B2Of/ZhfXY8YprdnsJCQkkJCQgMthQ9NtuN1udE2gaTq6rmGzO9A1gc1uR6gdYq5JKBRi
      9+7dnDp1CoDBwUFeffVVLly4AESanFVVVbzzzjtYlkVfXx+vvPIKvb29k69hWRb79+/nnXfe
      wTAMzp8/T0VFxWQd7+DgIEeOHOFSbZQ0TQIffhgZ+49z4brlljn+refO4rumLTIVFRVs3LiR
      mpoampubee2117j77rtJSkoCYGBggNraWrKysvj44495/fXXueeee3j11VcnT/DDhw/jcrnY
      tm0bw8PDHDp0iJKSEt59911M0/xMgkkpCR4+RLi2BiEEjrJy9NzcmP3+s00lwDwnpSQUCpGW
      lkZjYyN1dXX88pe/5NChQ0gpaW1tZdOmTaxatYrR0VEAgsEgNpuN8fHI1rVVVVVUV1fz0ksv
      0dXVRVFREQUFBQQCASorKyktLcXtdkeOFwgw9vT/gWAwstN7edmibPtfsnh/s0Xi/vvv59y5
      c7S2tpKUlMS6det48sknGRkZwTRN4uPjGRwcJBQKIaXkgQce4NChQ4RCIRwTN61SU1N58MEH
      ufnmm+ns7GR8fJxQKIRlWRw9epTjx4+zb98+WltbwbLgsqFOERcXq199Tiy+ca1Fpq2tjfb2
      duLj4ykrK6OlpYVnn32WoqIi+vr6yM/PZ+/evRw/fpwHH3yQuro6enp6KCsrIxwOU1NTw/bt
      23nppZdwOp184xvf4M033+T5559n165dlJSUEAqFyMzMJDc3F+nzTfYFbGvW4tx+c4zfgdml
      VoVYwE6dOkV5efkVv19fX09KSgqpqanTfs3QiRMM/7e/AsDzgz/BdfsdM45zvhJCCHX2LWBX
      O/kBiouLr/k1Q59WIhAQ58K2avX1hrZgqD6AMkmGQoRra0GAnrEMPSsr1iHNOpUAyiSr7yJW
      bzcIgX3jxgW74O21UAmgTDKampD+yCLHjhs3xDqcORHlBJCMD/VQVVXDWNAk5B+iqaUHiOwP
      cO58vdofYB4L10QWvRJeD7aVC3O9/2sV1QSQVpiq6gbyV2Zw4thJRkeGOFVVgyFhrL+Vypp6
      tT/APCUtC6PuDAKwFxYhPAtnr9+ZiPIokIVEwxWXCOERDCudomVxXOj1Y3QOsyInsoeU2h9g
      /pE93ZjdnZFlDzdsJGyaYJqxDmvWRTUBhOZkXUkO1dW1hHEgBHiWF3Ox9RS6I5l4bSByULU/
      wLwTOH8usuGdruNaV4ptkZU+Xkl0+wASerq78fvGyS1chcOmo9ucOIJjJGRlYlukU2oXOmlZ
      hE9WRub+Jyej5+bFOqQ5E92PXyFYXbaZy2+fJAE5WRO1pBmbono4JUoCAcyWZkBg37hpSQx/
      XqKGQRXMnm6s3h6EBvayq99dXmxUAigYZ+sAEPFubPkFMY5mbqkEUAifPRNp/y/PQUtbPMse
      TodKgCXOGh/DqD8fufu7cTNiiY3KTZkA0vBTfaaeppoDvPDSboLqPtaiYra1IoeHALCtWRPj
      aObelOkeGO6lvaeXsY4W1i5z0jYMRUlzEZoy26SUGDXVCMtCJCZiyy+MdUhzbsorgCsxHTnQ
      RNqqjcR7c8hcGnfIlwYpMSba/7bScljgOz5ej2k0+HSSEpPpaK5m0O5kRRhYOsPEi5r0+zEu
      NESmP99QuiSXrJkyAUKjvfSGHGzdug4hNNzqZu6iYbY0QzgMTie24lWxDicmrpoAvr4WXt/z
      W5raBxjsbkN3uLj3wd8jdXFsD7XkGTVVkeHPjAy0zMxYhxMTV00AV1IWd9/7AEFD4nTYMUIh
      EqZoJhqhACNjPtyeRGzCxB80SXDHIS2L0bExPB7PkrzUzjfSNDHqzyEQONZvRNiW5qX9qp1g
      zebAFh6mrrkTt9tNW/UndI5f+flSWpw4cpDOznaOHq9isK+Nt989iAT8w528VvEuIbU/wLxg
      9fdhtrVEOsDFi7/4/Uqm7AMc+PBtDjeOcq7qGJn561g/xSiQ3eEgPj6eUf84CJ3CFDutwwbh
      th7yCnIAJmsALMvCXAJzzucjo/kCBALgTUQUFC7Zv8OUw6BfffSP+PKGVVimQW/bOYb8V3u2
      hZQ6QugIYSElpK4soK+pjhHTQdLSvMrOS+GaU5FP/6JihMcb63BiZsorQHi0j5G4bLIyIT1B
      x5iiBZOc5KGnu5fE9GXYHS7ibAl4R7pxZJcQ7G+b2BQj0gfQNA19CU29nS9kMIh1piYy/Llh
      M/oSm/5wuSl/c4cngxtLdEbaApzr19h2laUihbBRuKaUz99PXJa2OfKftLUzCFWJFrOjDTky
      jLDZsJcurenPnzdlAgjdzljHGXq1LLaUuEAN4Cx4xplaME30/AK05JRYhxNTU/YBgkOdNAzb
      CAw04es6TdvIXISlzBZpWZiNkdmfttL1sQ4n5qZMAHu8l2DvBY4dOsDuox2ku+ciLGW2yPFx
      jMZ60DT0JTz8ecmUTaDhoUFSUzMo3ZjBLbd9Ge/S7S8tClZ7C/h9aGnp6CuXVvXXF7nqFcDy
      9fCrNz4kq2gt61fn8Nbrb+BXy/gsaMbpagSg565EcyfEOpyYu+rn+WDrWUpvf4AbiiMdJTnU
      QvswFCfPSWxKlEnLwmyYaP+X3BDrcOaFqyaA3Z3Chz//Ke/LiXF7m50/KP3anASmRJ8cGcK6
      2AOaiMz/V66eAN4VpfzlX5XOVSzKLDPbWpG+cbSs5YgkdRkHVRS/ZEgpMc/UADLS/NHVaAao
      BFg6pMSsr0OIyPCnmpIeEdWPASkNGurqCJiR+wf52cn0DoZYkZ2GZYZpae0gNy8PXVNv/lyT
      oyNYnR0Ijwe9uCTW4cwbUb4CaGTl5LIiO4Pe7l5GR/o5fqwKU8J4fxsHT9Sq/QFixDhTHan+
      ylqOtoRnf35edJdHFxoJ3kT6mtvJLliNJgYoznBxoS+I2TFI7orIdp2maUbapBP/KrPPaKyP
      7P5SXEI4HI51OPNG1HtC0grR0O1ny1YvQxcH8Kwopr/5FJrDg1sPAZFp0BDpmKn9AeZAKEio
      uTGy+lvZBjT1nk+K+jsx0NlCak4BmohcEXTdie4bIG7FKnydowCTHTAhhOqMzQFzoB852I+W
      noGWlq7e88tEPQFSc4q5tC95cnouycCK7K9EHsjcEu3DKdNgNTVAOIS+shARp5b0uJwaBl0C
      jPo6EEKN/nwBlQCLnAyHMc/Xgd2OfkNZrMOZd1QCLHJWWzME/GjLstC8alXjz1MJsMiZLY0I
      y0Jfpeqxv4hKgEVMWhZWwznQBbayDbEOZ15SCbCYBQNY3R0IbzJa+rJYRzMvqQRYxKyuduTw
      IFr2ckSC2tjhi6gEWMTMhnOAQF+lqr+uRCXAIiUtC+v8aYRNQ79BVX9diUqARUqODGH19SJS
      MxBq+POKop4A0rLwjY8TDBlYpkEgGJkAJ6WF3+9Xsz/niNXRCgEfWn4xqMlvVxTdBJCSC3VV
      1J49R0tnL0MXm9n91v6J/QG6eOW1PWp/gDkgpcRqbphY/W2Dmvx2FVGuCLNoagBv6DAAAAFE
      SURBVG3Dk5QOQgPNRn6SjY5Rk1BbN7mf2x9ASjn5fyWKpMRqbgRXPCzLUu/xVUT92qi7Eti4
      ZSsnTxzDuyKTjIICei6cQ5h2UhyhyedJKVUCzBa/D6urDS0nD5ngRar3+IqimwBCI9ll51xD
      A2HLjq4JhN0D/TU4ircR7D4PqIKY2WZcOIuwTPTiter9nUKUSyIFZZu3cbFvgJV5BbhskkSp
      k5F0K7ozHjOtHLuu2qOzSUo5Mf1BRy9RazpNJeofD5rNwbLLttzUAewTa1DaVDHGrAsFsdou
      IBKTEcmpUz9/iVP3ARYZOdgfmf6QVwCq+mtKKgEWGdnVhjAN9JIyNfw5DSoBFhmzMdL+13LV
      2v/ToRJgEZGmiWxvQmRkIRLV4rfToRJgEZE9ncjRYbRCVfw+XSoBFhGrpQGkRCtW5Y/T9f8B
      GfI1mn/srqAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Recovered' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Timeline with Filters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Countries' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
